<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xinweigh&#39;s blog</title>
    <link>http://Xinweigh.github.io/</link>
    <description>Recent content on Xinweigh&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 25 Mar 2023 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://Xinweigh.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://Xinweigh.github.io/about/</link>
      <pubDate>Sat, 25 Mar 2023 19:32:00 +0800</pubDate>
      
      <guid>http://Xinweigh.github.io/about/</guid>
      
        <description>&lt;p&gt;Xinweigh&amp;rsquo;s blog&lt;/p&gt;
&lt;p&gt;姑且是一个博客，会记录各种各样的事情&lt;/p&gt;
&lt;p&gt;包括但不限于计算机技术、游戏相关、料理（烹饪）、投资、音乐、求职、护肤及其他一些奇奇怪怪的东西&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Arch Linux &#43; Nvidia &#43; Vulkan环境配置</title>
      <link>http://Xinweigh.github.io/post/arch-linux-&#43;-nvidia-&#43;-vulkan%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://Xinweigh.github.io/post/arch-linux-&#43;-nvidia-&#43;-vulkan%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      
        <description>&lt;h2 id=&#34;arch-linux--nvidia--vulkan环境配置&#34;&gt;Arch Linux + Nvidia + Vulkan环境配置&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;起因是Yuzu模拟器报了启动错误：在运行视频核心时发生错误。这可能是由 gpu 驱动程序过旧造成的。有关详细信息，请参阅日志文件。关于日志文件的更多信息，请参考以下页面：如何上传日志文件。
在Vulkan模式下存在这个错误，换成OpenGL就不会报错了。但是OpenGL的运行效率低到令人发指，故尝试修复。
其实现阶段只是用来打游戏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-收集错误信息&#34;&gt;1. 收集错误信息&lt;/h3&gt;
&lt;p&gt;查一下yuzu的日志：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/.local/share/yuzu/log/yuzu_log.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得到一些结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3416.648985&lt;/span&gt;] &lt;span style=&#34;color:#a6e22e&#34;&gt;Render&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Vulkan&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Error&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;video_core&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vulkan_common&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vulkan_instance&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cpp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;AreExtensionsSupported&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Required&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;instance&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;extension&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VK_KHR_xlib_surface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;available&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3416.649051&lt;/span&gt;] &lt;span style=&#34;color:#a6e22e&#34;&gt;Render&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Vulkan&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Error&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;video_core&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer_vulkan&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderer_vulkan&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cpp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;RendererVulkan&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;106&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vulkan&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initialization&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;failed&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VK_ERROR_EXTENSION_NOT_PRESENT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3416.649073&lt;/span&gt;] &lt;span style=&#34;color:#a6e22e&#34;&gt;HW&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GPU&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Error&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;video_core&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;video_core&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cpp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CreateGPU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Failed&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GPU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vulkan&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initialization&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VK_ERROR_EXTENSION_NOT_PRESENT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3416.649100&lt;/span&gt;] &lt;span style=&#34;color:#a6e22e&#34;&gt;Core&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Critical&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;core&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;core&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cpp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Load&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;278&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Failed&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt; (Error &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3423.644251&lt;/span&gt;] &lt;span style=&#34;color:#a6e22e&#34;&gt;WebService&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Error&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;web_service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;web_backend&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cpp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;GenericRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;POST&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//api.yuzu-emu.org/telemetry returned error status code: 400
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3423.644251&lt;/span&gt;] &lt;span style=&#34;color:#a6e22e&#34;&gt;WebService&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Error&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;web_service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;web_backend&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cpp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;GenericRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;POST&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//api.yuzu-emu.org/telemetry returned error status code: 400
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看样子是某个Vulkan的视频核心相关插件没启动成功&lt;/p&gt;
&lt;h3 id=&#34;2-检查修复环境&#34;&gt;2. 检查&amp;amp;修复环境&lt;/h3&gt;
&lt;p&gt;看看提到的&lt;code&gt;VK_KHR_xlib_surface&lt;/code&gt;是干嘛的：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VK_KHR_xlib_surface.html&#34;&gt;VK_KHR_xlib_surface(3)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;是个提供Xorg支持的实例，这种应该会在安装套件时候直接包含。&lt;/p&gt;
&lt;p&gt;首先查阅万能的Arch Wiki，把该装的驱动都装一遍：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;yay&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;S&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nvidia&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nvidia&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;utils&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vulkan&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tools&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发现都是最新版了……&lt;/p&gt;
&lt;p&gt;再次查阅万能的Arch Wiki&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/Vulkan&#34;&gt;Vulkan -  Arch Linux 中文维基&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测试vulkaninfo命令——失效&lt;/li&gt;
&lt;li&gt;测试echo $VK_ICD_FILENAMES——无输出&lt;/li&gt;
&lt;li&gt;export添加变量VK_ICD_FILENAMES&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重启，vulkaninfo和yuzu都正常了&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Hugo 博客搭建、发布到github上及一些方便的环境配置</title>
      <link>http://Xinweigh.github.io/post/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://Xinweigh.github.io/post/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
      
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;其实很久之前就准备搭建博客来着，不过一直在搞其他事情，没找到时间搞起来，这次终于考研完得空搭好。搭建过程在此记录，作为第一篇博客文章发布吧！&lt;/p&gt;
&lt;h3 id=&#34;为什么选择github--hugo&#34;&gt;为什么选择Github + Hugo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Hugo简单易用&lt;/li&gt;
&lt;li&gt;Github免费为个人提供2G的Page空间，省去了找服务器买域名的时间和金钱&lt;/li&gt;
&lt;li&gt;最近在尝试Emacs，未来可能使用org-mode来做博客，Emacs有针对Hugo的现成插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;0-环境配置&#34;&gt;0. 环境配置&lt;/h2&gt;
&lt;p&gt;git什么的已经用了好久了，这里不写了&lt;/p&gt;
&lt;p&gt;得益于万能的Arch软件仓库，一个yay即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yay -S hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其他平台可参考 &lt;a href=&#34;https://gohugo.io/getting-started/installing&#34;&gt;Hugo Install&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-hugo部署调试添加主题等&#34;&gt;1. Hugo部署、调试、添加主题等&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;hugo new site blog&lt;/code&gt;会在当前目录下创建一个名为&lt;strong&gt;blog&lt;/strong&gt;的子目录作为工作目录。&lt;/p&gt;
&lt;p&gt;进入工作目录后，首先添加一个.gitignore文件，将public目录忽略。&lt;/p&gt;
&lt;p&gt;然后初始化一个git仓库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而后以子模块的模式添加主题，并添加默认站点设置和示例文章：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add --depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; https://github.com/xianmin/hugo-theme-jane.git themes/jane
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -r themes/jane/exampleSite/content ./
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp themes/jane/exampleSite/config.toml ./
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行&lt;code&gt;hugo server&lt;/code&gt;，即可在本地启动服务，默认地址是http://localhost:1313/，可以预先测试。&lt;/p&gt;
&lt;h2 id=&#34;2-github部署和博客发布&#34;&gt;2. Github部署和博客发布&lt;/h2&gt;
&lt;p&gt;Github新建一个仓库&lt;code&gt;username.github.io&lt;/code&gt;，username一定是自己的用户名，我的就是Xinweigh。否则博客地址会变成&amp;quot;https://username.github.io/仓库名&amp;quot;&lt;/p&gt;
&lt;p&gt;进入public目录，初始化git仓库，添加远程仓库为刚刚新建的仓库，而后push即可：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{% code %}}
cd public
git init
git remote add server git@github.com:Xinweigh/Xinweigh.github.io.git
git push
{{% /code %}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;push后稍等一分钟左右，Github需要一点时间来执行Action，可以在仓库页面-Actions查看&lt;/p&gt;
&lt;p&gt;此后的博客发布流程即为content目录下写博客-执行&lt;code&gt;hexo&lt;/code&gt;生成-public目录下git更新并推送&lt;/p&gt;
&lt;h2 id=&#34;3-一些小小的环境配置&#34;&gt;3. 一些小小的环境配置&lt;/h2&gt;
&lt;p&gt;针对总结的博客发布流程，可以写一个命令一键发布博客，使用&lt;code&gt;emacs -nw ~/.zshrc&lt;/code&gt;或&lt;code&gt;vim ~/.zshrc&lt;/code&gt;打开zsh配置文件，添加代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Hugo 更新博客&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update_blog &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cd ~/Documents/blog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;当前目录：&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;pwd&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cd public
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;当前目录&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;pwd&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blog update&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  git push
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;更新完成&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此后就可以直接用&lt;code&gt;update_blog&lt;/code&gt;命令来更新博客了。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a href=&#34;https://kinredon.github.io/post/how-to-publish-personal-website-on-github/&#34;&gt;使用 Hugo 搭建个人网站（博客、个人主页）并发布到 Github 上 —— kinredon&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
